version: "3.7"
services:
  gateway-server:
    image: 'dncjf64/palette-gateway-server:latest'
    env_file:
      - ~/.aws/credentials
      - ~/.aws/config
    container_name: gateway-server
    ports:
      - "8080:8080"
#    networks:
#      - default
#      - palette-dev
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
      - "AWS_ACCESS_KEY_ID=${}"
      - "AWS_SECRET_ACCESS_KEY=${}"
      - "AWS_REGION=ap-northeast-2"


  auth-server:
    image: 'dncjf64/palette-auth-server:latest'
    container_name: auth-server
    ports:
      - "8081:8081"
    #    networks:
    #      - default
    #      - palette-dev
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
      - "AWS_ACCESS_KEY_ID=${}"
      - "AWS_SECRET_ACCESS_KEY=${}"
      - "AWS_REGION=ap-northeast-2"
  #    volumes:
  #      - ../../logs:/var/log/application-logs

  api-server:
    image: 'dncjf64/palette-api-server:latest'
    container_name: api-server
    ports:
      - "8082:8082"
#    networks:
#      - default
#      - palette-dev
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
      - "AWS_ACCESS_KEY_ID=${}"
      - "AWS_SECRET_ACCESS_KEY=${}"
      - "AWS_REGION=ap-northeast-2"
#    volumes:
#      - ../../logs:/var/log/application-logs

  db:
    image: mysql:8.0
    container_name: mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=palette
      - MYSQL_ROOT_PASSWORD=1q2w3e4r1!
      - TZ=Asia/Seoul
    command:
      - --lower_case_table_names=1 # 대소문자 구분
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - /home/mysql/db:/var/lib/mysql # -v 옵션 (다렉토리 마운트 설정

# mysql 참고 https://darrengwon.tistory.com/1383

# 네트워크 생성
#networks:
#  palette-dev: #네트워크 이름
#    driver: bridge
#    network_mode: host

# 외부 네트워크 사용
networks:
  default:
    external:
      name: palette-dev

# 참고
# profiles 별로 docker-compose 분리 시
# for the profile 'test'
#  docker-compose -f docker-compose-test.yml up

